/**
  \mainpage Core Flight Executive Documentation

  <UL>
    <LI> General Information and Concepts
    <UL>
       <LI> \subpage cfebackground
       <LI> \subpage cfeappdocs
       <LI> \subpage cfeversion
       <LI> \subpage cfedependencies
       <LI> \subpage cfeacronyms
       <LI> \subpage cfeglossary
    </UL>
    <LI> Executive Services (ES)
    <UL>
      <LI> \subpage cfeesovr
      <LI> \subpage cfeescmds
      <LI> \subpage cfeestlm
      <LI> \subpage cfe_es_events.h "ES Event Message Reference"
      <LI> \subpage cfeescfg
    </UL>
    <LI> Events Services (EVS)
    <UL>
      <LI> \subpage cfeevsovr
      <LI> \subpage cfeevscmds
      <LI> \subpage cfeevstlm
      <LI> \subpage cfe_evs_events.h "EVS Event Message Reference"
      <LI> \subpage cfeevscfg
    </UL>
    <LI> Software Bus Services (SB)
    <UL>
      <LI> \subpage cfesbovr
      <LI> \subpage cfesbcmds
      <LI> \subpage cfesbtlm
      <LI> \subpage cfe_sb_events.h "SB Event Message Reference"
      <LI> \subpage cfesbcfg
    </UL>
    <LI> Table Services (TBL)
    <UL>
      <LI> \subpage cfetblovr
      <LI> \subpage cfetblcmds
      <LI> \subpage cfetbltlm
      <LI> \subpage cfe_tbl_events.h "TBL Event Message Reference"
      <LI> \subpage cfetblcfg
    </UL>
    <LI> Time Services (TIME)
    <UL>
      <LI> \subpage cfetimeovr
      <LI> \subpage cfetimecmds
      <LI> \subpage cfetimetlm
      <LI> \subpage cfe_time_events.h "TIME Event Message Reference"
      <LI> \subpage cfetimecfg
    </UL>
    <LI> \subpage cfeevents
    <LI> \subpage cfecmdmnems
    <LI> \subpage cfetlmmnems
    <LI> \subpage cfeapi
  </UL>

**/

/**
  \page cfebackground Background

  The Core Flight Executive (cFE) is an application development and run-time environment. The cFE 
  provides a set of core services including Software Bus (messaging), Time, Event (Alerts), Executive 
  (startup and runtime), and Table services. The cFE defines an application programming interface (API) 
  for each service which serves as the basis for application development. <BR>
  
  The cFE Software Bus service provides a publish and subscribe messaging system that allows applications 
  to easily plug and play into the system. Applications subscribe to cFE services at runtime, making 
  system modifications easy. Facilitating rapid prototyping, new applications can be compiled, linked, loaded, 
  and started without requiring the entire system to be rebuilt. 

  \image html CFSPubSub.jpg
  
  Each service comes complete with a built in application that allows users to interface with each service. To 
  support reuse and project independence, the cFE contains a configurable set of requirements and code. The configurable 
  parameters allow the cFE to be tailored for each environment including desk-top and closed loop simulation environments. 
  This provides the ability to run and test software applications on a developer's desktop and then deploy that same software 
  without changes to the embedded system. In addition the cFE includes the following software development tools:

  <ul> <li> Unit Test Framework (UTF) for unit testing applications developed via the cFE </li>
       <li> Software Timing Analyzer that provides visibility into the real-time performance of embedded systems software </li>
       <li> Table Builder </li>
       <li> Command and Telemetry utilities </li> </ul>

   The cFE is one of the components of the Core Flight System (cFS), a platform and project independent reusable 
   software framework and set of reusable software applications. There are three key aspects to the cFS architecture: 
   a dynamic run-time environment, layered software, and a component based design. The combination of these key aspects 
   along with an implementation targeted to the embedded software domain makes it suitable for reuse on any number of 
   NASA flight projects and/or embedded software systems. <BR> 

   The pivotal design feature, abstracting the software architecture from the hardware and forming the basis of reuse, 
   is component layering. Each layer of the architecture "hides" its implementation and technology details from the other 
   layers by defining and using standard Application Programming Interfaces (APIs). The internals of a layer can be changed 
   without affecting other layers' internals and components. <BR> 

   \image html CFSLayers.jpg

   The layers include an OS Abstraction Layer (OSAL), Platform Support Package (PSP) layer, core Flight Executive (cFE) layer, 
   and an Application layer. The cFE layer runs on top of the PSP and OSAL layers. The cFE comes complete with a build 
   environment, deployment guide, API reference guide, and provides a sample PSP. The OSAL is available open source and 
   once integrated into the cFE build environment, developers will be ready to build and run the system and start developing 
   their mission/project specific applications that easily plug and play into the system.
  
   <H2> Core Flight Executive (cFE) Goals </H2>

   The main long term goal of the cFE is to form the basis for a platform and project 
   independent reusable software framework. The cFE with the OSAL allow the development 
   of portable embedded system software that is independent of a particular Real Time 
   Operating System and hardware platform. A secondary long term goal is to create a 
   standardized, product-line approach for development of embedded aerospace flight 
   software. <BR>

   <H3> Functional and Community Goals </H3>

   The cFE allows embedded system software to be developed and tested on desktop workstations 
   and ported to the target platform without changing a single line of code, providing a shorter 
   development and debug time. The cFE is an enabler of software collaboration amongst all users 
   promoting the growth of the application and library layers where new applications, libraries, 
   tools, and lessons learned can be contributed and shared. <BR>

   It is important for application developers to realize the long term and functional 
   goals of the cFE.  With a standard set of services providing a standard API, all 
   applications developed with the cFE have an opportunity to become useful on 
   future missions through code reuse.  In order to achieve this goal, 
   applications must be written with care to ensure that their code does not 
   have dependencies on specific hardware, software or compilers.  The cFE and 
   the underlying generic operating system API (OS API) have been designed to 
   insulate the cFE Application developer from hardware and software dependencies.  
   The developer, however, must make the effort to identify the proper methods 
   through the cFE and OS API to satisfy their software requirements and not 
   be tempted to take a "short-cut" and accomplish their goal with a direct 
   hardware or operating system software interface.
**/

/**
  \page cfeappdocs Applicable Documents
  
  <TABLE>
     <TR>
        <TH> Document Title
        <TH> Link
     <TR>
        <TD> cFE System (L4) Requirements Document
        <TD> cfe/docs/'cfe requirements.docx'
     <TR>
        <TD> cFE Functional (L5) Requirements Document
        <TD> cfe/docs/cFE_FunctionalRequirements.csv
     <TR>
        <TD> cFE Application Developers Guide
        <TD> cfe/docs/'cFE Application Developers Guide.md'
     <TR>
        <TD> cFE User's Guide (includes API)
        <TD> Autogenerated from code, provided with releases in cFE repository
     <TR>
        <TD> OS Abstraction Layer (OSAL) API
        <TD> Autogenerated from code, provided with releases in OSAL repository
  </TABLE>
**/

/**
  \page cfedependencies Dependencies

  The Core Flight Executive (cFE) is required to be built with the Operating System Abstraction Layer (OSAL) and Platform Support Package (PSP) 
  componenets of the Core Flight System (cFS).  It is always recommended to build with the latest versions of each of the components as 
  backward compatability may not be supported. <BR>
  
  Several internal data structures within the cFE use the "char" data type.  This data type is typically 1 byte in storage size with a value 
  range -128 to 127 or 0 to 255.  The size of the "char" data type and whether or not the type is signed or unsigned can change across 
  platforms.  The cFE assumes use of the "char" data type as an <B> 8-bit type. </B>         

**/

/**
  \page cfeacronyms Acronyms

  <TABLE>
     <TR>
        <TH> Acronym
        <TH> Description
     <TR>
        <TD> AC
        <TD> Attitude Control
     <TR>
        <TD> ACE
        <TD> Attitude Control Electronics
     <TR>
        <TD> ACS
        <TD> Attitude Control System
     <TR>
        <TD> API
        <TD> Application Programming Interface
     <TR>
        <TD> APID
        <TD> CCSDS Application ID
     <TR>
        <TD> App
        <TD> Application
     <TR>
        <TD> CCSDS
        <TD> Consultative Committee for Space Data Systems
     <TR>
        <TD> CDH, C&DH
        <TD> Command and Data Handling
     <TR>
        <TD> cFE
        <TD> core Flight Executive
     <TR>
        <TD> cFS
        <TD> core Flight System
     <TR>
        <TD> CM
        <TD> Configuration Management
     <TR>
        <TD> CMD
        <TD> Command
     <TR>
        <TD> CPU
        <TD> Central Processing Unit
     <TR>
        <TD> EDAC
        <TD> Error Detection and Correction
     <TR>
        <TD> EEPROM
        <TD> Electrically Erasable Programmable Read-Only Memory
     <TR>
        <TD> ES
        <TD> Executive Services
     <TR>
        <TD> EVS
        <TD> Event Services
     <TR>
        <TD> FC
        <TD> Function Code
     <TR>
        <TD> FDC
        <TD> Failure Detection and Correction
     <TR>
        <TD> FSW
        <TD> Flight Software
     <TR>
        <TD> HW, H/W
        <TD> Hardware
     <TR>
        <TD> ICD
        <TD> Interface Control Document
     <TR>
        <TD> MET
        <TD> Mission Elapsed Time
     <TR>
        <TD> MID
        <TD> Message ID
     <TR>
        <TD> OS
        <TD> Operating System
     <TR>
        <TD> OSAL
        <TD> Operating System Abstraction Layer
     <TR>
        <TD> PID
        <TD> Pipeline ID
     <TR>
        <TD> PKT
        <TD> Packet
     <TR>
        <TD> PSP
        <TD> Platform Support Package
     <TR>
        <TD> RAM
        <TD> Random-Access Memory
     <TR>
        <TD> SB
        <TD> Software Bus
     <TR>
        <TD> SDO
        <TD> Solar Dynamics Observatory
     <TR>
        <TD> ST5
        <TD> Space Technology Five
     <TR>
        <TD> STCF
        <TD> Spacecraft Time Correlation Factor
     <TR>
        <TD> SW, S/W
        <TD> Software
     <TR>
        <TD> TAI
        <TD> International Atomic Time
     <TR>
        <TD> TBD
        <TD> To Be Determined
     <TR>
        <TD> TBL
        <TD> Table Services
     <TR>
        <TD> TID
        <TD> Task ID
     <TR>
        <TD> TIME
        <TD> Time Services
     <TR>
        <TD> TLM
        <TD> Telemetry
     <TR>
        <TD> UTC
        <TD> Coordinated Universal Time
  </TABLE>
**/

/**
  \page cfeglossary Glossary of Terms
  
  <TABLE>
     <TR>
        <TH> Term
        <TH> Definition
     <TR>
        <TD> \anchor cfeadg_application Application (or App)
        <TD> A set of data and functions that is treated as a single entity 
             by the cFE.  cFE resources are allocated on a per-Application 
             basis.  Applications are made up of a Main Task and zero or 
             more Child Tasks.
     <TR>
        <TD> \anchor cfeadg_applicationid Application ID
        <TD> A processor unique reference to an Application. <BR>
             <B> NOTE: This is different from a CCSDS Application ID which is 
             referred to as an "APID." </B>
     <TR>
        <TD> \anchor cfeadg_api Application Programmer's Interface (API)
        <TD> A set of routines, protocols, and tools for building software 
             applications
     <TR>
        <TD> \anchor cfeadg_psp Platform Support Package (PSP)
        <TD> A collection of user-provided facilities that interface an OS 
             and the cFE with a specific hardware platform.  The PSP is 
             responsible for hardware initialization.
     <TR>
        <TD> \anchor cfeadg_childtask Child Task
        <TD> A separate thread of execution that is spawned by an 
             Application's Main Task.
     <TR>
        <TD> \anchor cfeadg_command Command
        <TD> A Software Bus Message defined by the receiving Application. 
             Commands can originate from other onboard Applications or 
             from the ground.
     <TR>
        <TD> \anchor cfeadg_cfe Core Flight Executive (cFE)
        <TD> A runtime environment and a set of services for hosting FSW 
             Applications
     <TR>
        <TD> \anchor cfeadg_cds Critical Data Store (CDS)
        <TD> A collection of data that is not modified by the OS or 
             cFE following a Processor Reset.
     <TR>
        <TD> \anchor cfeadg_crc Cyclic Redundancy Check
        <TD> A polynomial based method for checking that a data set 
             has remained unchanged from one time period to another.
     <TR>
        <TD> \anchor cfeadg_developer Developer
        <TD> Anyone who is coding a cFE Application.
     <TR>
        <TD> \anchor cfeadg_eventdata Event Data
        <TD> Data describing an Event that is supplied to the cFE 
             Event Service. The cFE includes this data in an  
             \ref cfeadg_eventmessage "Event Message".
     <TR>
        <TD> \anchor cfeadg_eventfilter Event Filter
        <TD> A numeric value (bit mask) used to determine how 
             frequently to output an application Event Message 
             defined by its \ref cfeadg_eventid "Event ID".
     <TR>
        <TD> \anchor cfeadg_eventformatmode Event Format Mode
        <TD> Defines the Event Message Format downlink option: short or long.  
             The short format is used when there is limited telemetry bandwidth 
             and is binary.  The long format is in ASCII and is used for 
             logging to a Local Event Log and to an Event Message Port.
     <TR>
        <TD> \anchor cfeadg_eventid Event ID
        <TD> A numeric literal used to uniquely name an Application event.
     <TR>
        <TD> \anchor cfeadg_eventtype Event Type
        <TD> A numeric literal used to identify the type of an Application event.
             An event type may be #CFE_EVS_DEBUG, #CFE_EVS_INFORMATION, 
             #CFE_EVS_ERROR, or #CFE_EVS_CRITICAL.
     <TR>
        <TD> \anchor cfeadg_eventmessage Event Message
        <TD> A data item used to notify the user and/or an external 
             \ref cfeadg_application "Application" of a significant event. 
             Event Messages include a time-stamp of when the message was 
             generated, a processor unique identifier, an 
             \ref cfeadg_applicationid "Application ID", the
             \ref cfeadg_eventtype "Event Type" (DEBUG,INFO,ERROR or CRITICAL), 
             and \ref cfeadg_eventdata "Event Data".  An Event Message can 
             either be real-time or playback from a Local Event Log.
  </TABLE>
**/

/**
  \page cfeapi cFE Application Programmer's Interface (API) Reference 
  <H4> Executive Services API </H4>
  <UL>
    <LI> \ref CFEAPIESEntryExit
    <UL>
      <LI> #CFE_ES_Main - \copybrief CFE_ES_Main
      <LI> #CFE_ES_ResetCFE - \copybrief CFE_ES_ResetCFE
    </UL>
    <LI> \ref CFEAPIESAppControl
    <UL>
      <LI> #CFE_ES_RestartApp - \copybrief CFE_ES_RestartApp
      <LI> #CFE_ES_ReloadApp - \copybrief CFE_ES_ReloadApp
      <LI> #CFE_ES_DeleteApp - \copybrief CFE_ES_DeleteApp
    </UL>
    <LI> \ref CFEAPIESAppBehavior
    <UL>
      <LI> #CFE_ES_RegisterApp - \copybrief CFE_ES_RegisterApp
      <LI> #CFE_ES_RunLoop - \copybrief CFE_ES_RunLoop
      <LI> #CFE_ES_WaitForStartupSync - \copybrief CFE_ES_WaitForStartupSync
      <LI> #CFE_ES_WaitForSystemState - \copybrief CFE_ES_WaitForSystemState
      <LI> #CFE_ES_IncrementTaskCounter - \copybrief CFE_ES_IncrementTaskCounter
      <LI> #CFE_ES_ExitApp - \copybrief CFE_ES_ExitApp
    </UL>
    <LI> \ref CFEAPIESInfo
    <UL>
      <LI> #CFE_ES_GetResetType - \copybrief CFE_ES_GetResetType
      <LI> #CFE_ES_GetAppID - \copybrief CFE_ES_GetAppID
      <LI> #CFE_ES_GetAppIDByName - \copybrief CFE_ES_GetAppIDByName
      <LI> #CFE_ES_GetAppName - \copybrief CFE_ES_GetAppName
      <LI> #CFE_ES_GetAppInfo - \copybrief CFE_ES_GetAppInfo
      <LI> #CFE_ES_GetTaskInfo - \copybrief CFE_ES_GetTaskInfo
    </UL>
    <LI> \ref CFEAPIESChildTask
    <UL>
      <LI> #CFE_ES_RegisterChildTask - \copybrief CFE_ES_RegisterChildTask
      <LI> #CFE_ES_CreateChildTask - \copybrief CFE_ES_CreateChildTask
      <LI> #CFE_ES_DeleteChildTask - \copybrief CFE_ES_DeleteChildTask
      <LI> #CFE_ES_ExitChildTask - \copybrief CFE_ES_ExitChildTask
    </UL>
    <LI> \ref CFEAPIESCritData
    <UL>
      <LI> #CFE_ES_RegisterCDS - \copybrief CFE_ES_RegisterCDS
      <LI> #CFE_ES_CopyToCDS - \copybrief CFE_ES_CopyToCDS
      <LI> #CFE_ES_RestoreFromCDS - \copybrief CFE_ES_RestoreFromCDS
    </UL>
    <LI> \ref CFEAPIESMemManage
    <UL>
      <LI> #CFE_ES_PoolCreate - \copybrief CFE_ES_PoolCreate
      <LI> #CFE_ES_PoolCreateEx - \copybrief CFE_ES_PoolCreateEx
      <LI> #CFE_ES_PoolCreateNoSem - \copybrief CFE_ES_PoolCreateNoSem
      <LI> #CFE_ES_GetPoolBuf - \copybrief CFE_ES_GetPoolBuf
      <LI> #CFE_ES_PutPoolBuf - \copybrief CFE_ES_PutPoolBuf
      <LI> #CFE_ES_GetMemPoolStats - \copybrief CFE_ES_GetMemPoolStats
      <LI> #CFE_ES_GetPoolBufInfo - \copybrief CFE_ES_GetPoolBufInfo
    </UL>
    <LI> \ref CFEAPIESPerfMon
    <UL>
      <LI> #CFE_ES_PerfLogEntry - \copybrief CFE_ES_PerfLogEntry
      <LI> #CFE_ES_PerfLogExit - \copybrief CFE_ES_PerfLogExit
      <LI> #CFE_ES_PerfLogAdd - \copybrief CFE_ES_PerfLogAdd
    </UL>
    <LI> \ref CFEAPIESGenCount
    <UL>
      <LI> #CFE_ES_RegisterGenCounter - \copybrief CFE_ES_RegisterGenCounter
      <LI> #CFE_ES_DeleteGenCounter - \copybrief CFE_ES_DeleteGenCounter
      <LI> #CFE_ES_IncrementGenCounter - \copybrief CFE_ES_IncrementGenCounter
      <LI> #CFE_ES_SetGenCount - \copybrief CFE_ES_SetGenCount
      <LI> #CFE_ES_GetGenCount - \copybrief CFE_ES_GetGenCount
      <LI> #CFE_ES_GetGenCounterIDByName - \copybrief CFE_ES_GetGenCounterIDByName
    </UL>
    <LI> \ref CFEAPIESMisc
    <UL>
      <LI> #CFE_ES_CalculateCRC - \copybrief CFE_ES_CalculateCRC
      <LI> #CFE_ES_WriteToSysLog - \copybrief CFE_ES_WriteToSysLog
      <LI> #CFE_ES_ProcessCoreException - \copybrief CFE_ES_ProcessCoreException
    </UL>
  </UL>

  <H4> Events Services API </H4>
  <UL>
    <LI> \ref CFEAPIEVSReg
    <UL>
      <LI> #CFE_EVS_Register - \copybrief CFE_EVS_Register
      <LI> #CFE_EVS_Unregister - \copybrief CFE_EVS_Unregister
    </UL>
    <LI> \ref CFEAPIEVSSend
    <UL>
      <LI> #CFE_EVS_SendEvent - \copybrief CFE_EVS_SendEvent
      <LI> #CFE_EVS_SendEventWithAppID - \copybrief CFE_EVS_SendEventWithAppID
      <LI> #CFE_EVS_SendTimedEvent - \copybrief CFE_EVS_SendTimedEvent
    </UL>
    <LI> \ref CFEAPIEVSResetFilter
    <UL>
      <LI> #CFE_EVS_ResetFilter - \copybrief CFE_EVS_ResetFilter
      <LI> #CFE_EVS_ResetAllFilters - \copybrief CFE_EVS_ResetAllFilters
    </UL>
  </UL>

  <H4> File Services API </H4>
  <UL>
    <LI> \ref CFEAPIFSHeader
    <UL>
	  <LI> #CFE_FS_ReadHeader - \copybrief CFE_FS_ReadHeader
          <LI> #CFE_FS_InitHeader - \copybrief CFE_FS_InitHeader
	  <LI> #CFE_FS_WriteHeader - \copybrief CFE_FS_WriteHeader
	  <LI> #CFE_FS_SetTimestamp - \copybrief CFE_FS_SetTimestamp
    </UL>
    <LI> \ref CFEAPIFSCompress
    <UL>
	  <LI> #CFE_FS_IsGzFile - \copybrief CFE_FS_IsGzFile
	  <LI> #CFE_FS_Decompress - \copybrief CFE_FS_Decompress
          <LI> #CFE_FS_GetUncompressedFile - \copybrief CFE_FS_GetUncompressedFile
    </UL>
    <LI> \ref CFEAPIFSUtil
    <UL>
	  <LI> #CFE_FS_ExtractFilenameFromPath - \copybrief CFE_FS_ExtractFilenameFromPath
    </UL>
  </UL>

  <H4> Software Bus API </H4>
  <UL>
    <LI> \ref CFEAPISBPipe
    <UL>
      <LI> #CFE_SB_CreatePipe - \copybrief CFE_SB_CreatePipe
      <LI> #CFE_SB_DeletePipe - \copybrief CFE_SB_DeletePipe
      <LI> #CFE_SB_SetPipeOpts - \copybrief CFE_SB_SetPipeOpts
      <LI> #CFE_SB_GetPipeOpts - \copybrief CFE_SB_GetPipeOpts
      <LI> #CFE_SB_GetPipeName - \copybrief CFE_SB_GetPipeName
      <LI> #CFE_SB_GetPipeIdByName - \copybrief CFE_SB_GetPipeIdByName
    </UL>
    <LI> \ref CFEAPISBSubscription
    <UL>
      <LI> #CFE_SB_Subscribe - \copybrief CFE_SB_Subscribe
      <LI> #CFE_SB_SubscribeEx - \copybrief CFE_SB_SubscribeEx
      <LI> #CFE_SB_SubscribeLocal - \copybrief CFE_SB_SubscribeLocal
      <LI> #CFE_SB_Unsubscribe - \copybrief CFE_SB_Unsubscribe
      <LI> #CFE_SB_UnsubscribeLocal - \copybrief CFE_SB_UnsubscribeLocal
    </UL>
    <LI> \ref CFEAPISBMessage
    <UL>
      <LI> #CFE_SB_SendMsg - \copybrief CFE_SB_SendMsg
      <LI> #CFE_SB_PassMsg - \copybrief CFE_SB_PassMsg
      <LI> #CFE_SB_RcvMsg - \copybrief CFE_SB_RcvMsg
    </UL>
    <LI> \ref CFEAPISBZeroCopy
    <UL>
      <LI> #CFE_SB_ZeroCopyGetPtr - \copybrief CFE_SB_ZeroCopyGetPtr
      <LI> #CFE_SB_ZeroCopyReleasePtr - \copybrief CFE_SB_ZeroCopyReleasePtr
      <LI> #CFE_SB_ZeroCopySend - \copybrief CFE_SB_ZeroCopySend
      <LI> #CFE_SB_ZeroCopyPass - \copybrief CFE_SB_ZeroCopyPass
    </UL>
    <LI> \ref CFEAPISBSetMessage
    <UL>
      <LI> #CFE_SB_InitMsg - \copybrief CFE_SB_InitMsg
      <LI> #CFE_SB_SetMsgId - \copybrief CFE_SB_SetMsgId
      <LI> #CFE_SB_SetUserDataLength - \copybrief CFE_SB_SetUserDataLength
      <LI> #CFE_SB_SetTotalMsgLength - \copybrief CFE_SB_SetTotalMsgLength
      <LI> #CFE_SB_SetMsgTime - \copybrief CFE_SB_SetMsgTime
      <LI> #CFE_SB_TimeStampMsg - \copybrief CFE_SB_TimeStampMsg
      <LI> #CFE_SB_SetCmdCode - \copybrief CFE_SB_SetCmdCode
      <LI> #CFE_SB_MessageStringSet - \copybrief CFE_SB_MessageStringSet
    </UL>
    <LI> \ref CFEAPIGetMessage
    <UL>
      <LI> #CFE_SB_GetUserData - \copybrief CFE_SB_GetUserData
      <LI> #CFE_SB_GetMsgId - \copybrief CFE_SB_GetMsgId
      <LI> #CFE_SB_GetUserDataLength - \copybrief CFE_SB_GetUserDataLength
      <LI> #CFE_SB_GetTotalMsgLength - \copybrief CFE_SB_GetTotalMsgLength
      <LI> #CFE_SB_GetMsgTime - \copybrief CFE_SB_GetMsgTime
      <LI> #CFE_SB_GetCmdCode - \copybrief CFE_SB_GetCmdCode
      <LI> #CFE_SB_GetLastSenderId - \copybrief CFE_SB_GetLastSenderId
      <LI> #CFE_SB_MessageStringGet - \copybrief CFE_SB_MessageStringGet
    </UL>
    <LI> \ref CFEAPISBChecksum
    <UL>
      <LI> #CFE_SB_GenerateChecksum - \copybrief CFE_SB_GenerateChecksum
      <LI> #CFE_SB_GetChecksum - \copybrief CFE_SB_GetChecksum
      <LI> #CFE_SB_ValidateChecksum - \copybrief CFE_SB_ValidateChecksum
    </UL>
    <LI> \ref CFEAPISBMessageID
    <UL>
      <LI> #CFE_SB_MsgId_Equal - \copybrief CFE_SB_MsgId_Equal
      <LI> #CFE_SB_MsgIdToValue - \copybrief CFE_SB_MsgIdToValue
      <LI> #CFE_SB_ValueToMsgId - \copybrief CFE_SB_ValueToMsgId
    </UL>
  </UL>

  <H4> Table Services API </H4>
  <UL>
    <LI> \ref CFEAPITBLRegistration
    <UL>
      <LI> #CFE_TBL_Register - \copybrief CFE_TBL_Register
      <LI> #CFE_TBL_Share - \copybrief CFE_TBL_Share
      <LI> #CFE_TBL_Unregister - \copybrief CFE_TBL_Unregister
    </UL>
    <LI> \ref CFEAPITBLManage
    <UL>
      <LI> #CFE_TBL_Load - \copybrief CFE_TBL_Load
      <LI> #CFE_TBL_Update - \copybrief CFE_TBL_Update
      <LI> #CFE_TBL_Validate - \copybrief CFE_TBL_Validate
      <LI> #CFE_TBL_Manage - \copybrief CFE_TBL_Manage
      <LI> #CFE_TBL_DumpToBuffer - \copybrief CFE_TBL_DumpToBuffer
      <LI> #CFE_TBL_Modified - \copybrief CFE_TBL_Modified
    </UL>
    <LI> \ref CFEAPITBLAccess
    <UL>
      <LI> #CFE_TBL_GetAddress - \copybrief CFE_TBL_GetAddress
      <LI> #CFE_TBL_GetAddresses - \copybrief CFE_TBL_GetAddresses
      <LI> #CFE_TBL_ReleaseAddress - \copybrief CFE_TBL_ReleaseAddress
      <LI> #CFE_TBL_ReleaseAddresses - \copybrief CFE_TBL_ReleaseAddresses
    </UL>
    <LI> \ref CFEAPITBLInfo
    <UL>
      <LI> #CFE_TBL_GetStatus - \copybrief CFE_TBL_GetStatus
      <LI> #CFE_TBL_GetInfo - \copybrief CFE_TBL_GetInfo
      <LI> #CFE_TBL_NotifyByMessage - \copybrief CFE_TBL_NotifyByMessage
    </UL>
  </UL>

  <H4> Time Services API </H4>
  <UL>
    <LI> \ref CFEAPITIMEGetCurrent
    <UL>
      <LI> #CFE_TIME_GetTime - \copybrief CFE_TIME_GetTime
      <LI> #CFE_TIME_GetTAI - \copybrief CFE_TIME_GetTAI
      <LI> #CFE_TIME_GetUTC - \copybrief CFE_TIME_GetUTC
      <LI> #CFE_TIME_GetMET - \copybrief CFE_TIME_GetMET
      <LI> #CFE_TIME_GetMETseconds - \copybrief CFE_TIME_GetMETseconds
      <LI> #CFE_TIME_GetMETsubsecs - \copybrief CFE_TIME_GetMETsubsecs
    </UL>
    <LI> \ref CFEAPITIMEGetInfo
    <UL>
      <LI> #CFE_TIME_GetSTCF - \copybrief CFE_TIME_GetSTCF
      <LI> #CFE_TIME_GetLeapSeconds - \copybrief CFE_TIME_GetLeapSeconds
      <LI> #CFE_TIME_GetClockState - \copybrief CFE_TIME_GetClockState
      <LI> #CFE_TIME_GetClockInfo - \copybrief CFE_TIME_GetClockInfo
    </UL>
    <LI> \ref CFEAPITIMEArithmetic
    <UL>
      <LI> #CFE_TIME_Add - \copybrief CFE_TIME_Add
      <LI> #CFE_TIME_Subtract - \copybrief CFE_TIME_Subtract
      <LI> #CFE_TIME_Compare - \copybrief CFE_TIME_Compare
    </UL>
    <LI> \ref CFEAPITIMEConvert
    <UL>
      <LI> #CFE_TIME_MET2SCTime - \copybrief CFE_TIME_MET2SCTime
      <LI> #CFE_TIME_Sub2MicroSecs - \copybrief CFE_TIME_Sub2MicroSecs
      <LI> #CFE_TIME_Micro2SubSecs - \copybrief CFE_TIME_Micro2SubSecs
      <LI> #CFE_TIME_CFE2FSSeconds - \copybrief CFE_TIME_CFE2FSSeconds
      <LI> #CFE_TIME_FS2CFESeconds - \copybrief CFE_TIME_FS2CFESeconds
    </UL>
    <LI> \ref CFEAPITIMEExternSource
    <UL>
      <LI> #CFE_TIME_ExternalTone - \copybrief CFE_TIME_ExternalTone
      <LI> #CFE_TIME_ExternalMET - \copybrief CFE_TIME_ExternalMET
      <LI> #CFE_TIME_ExternalGPS - \copybrief CFE_TIME_ExternalGPS
      <LI> #CFE_TIME_ExternalTime - \copybrief CFE_TIME_ExternalTime
      <LI> #CFE_TIME_RegisterSynchCallback - \copybrief CFE_TIME_RegisterSynchCallback
      <LI> #CFE_TIME_UnregisterSynchCallback - \copybrief CFE_TIME_UnregisterSynchCallback
    </UL>
    <LI> \ref CFEAPITIMEMisc
    <UL>
      <LI> #CFE_TIME_Print - \copybrief CFE_TIME_Print
      <LI> #CFE_TIME_Local1HzISR - \copybrief CFE_TIME_Local1HzISR
    </UL>
  </UL>
**/

