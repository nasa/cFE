/**
  \mainpage Osal API Documentation

  <UL>
    <LI> General Information and Concepts
    <UL>
       <LI> \subpage osalIntro
    </UL>
    <LI> Core OS Module
    <UL>
      <LI> \ref OSReturnCodes
      <LI> \ref OSObjectTypes
      <LI> \ref OSSemaphoreStates
      <LI> APIs
      <UL>
        <LI> \ref OSAPICore
        <LI> \ref OSAPIObjUtil
        <LI> \ref OSAPITask
        <LI> \ref OSAPIMsgQueue
        <LI> \ref OSAPISem
        <LI> \ref OSAPITime
        <LI> \ref OSAPIExc
        <LI> \ref OSAPIFPUExc
        <LI> \ref OSAPIInterrupt
        <LI> \ref OSAPIShMem
        <LI> \ref OSAPIHeap
        <LI> \ref OSAPIError
        <LI> \ref OSAPISelect
        <LI> \ref OSAPIPrintf
      </UL>
      <LI> \subpage osapi-os-core.h "Core OS Module Reference"
    </UL>
    <LI> OS File System
    <UL>
      <LI> \subpage osalfsovr
      <LI> \subpage osalfsfd
      <LI> \ref OSFileAccess
      <LI> \ref OSFileOffset
      <LI> \ref OSVolType
      <LI> APIs
      <UL>
        <LI> \ref OSAPIFile
        <LI> \ref OSAPIDir
        <LI> \ref OSAPIFileSys
        <LI> \ref OSAPIShell
      </UL>
      <LI> \subpage osapi-os-filesys.h "File System Module Reference"
    </UL>
    <LI> Object File Loader
    <UL>
      <LI> APIs
      <UL>
        <LI> \ref OSAPILoader
      </UL>
      <LI> \subpage osapi-os-loader.h "File Loader Module Reference"
    </UL>
    <LI> Network Module
    <UL>
      <LI> APIs
      <UL>
        <LI> \ref OSAPISocketAddr
        <LI> \ref OSALAPISocket
      </UL>
      <LI> \subpage osapi-os-net.h "Network Module Reference"
    </UL>
    <LI> Timer
    <UL>
      <LI> \subpage osaltimerover
      <LI> APIs
      <UL>
        <LI> \ref OSAPITimer
      </UL>
      <LI> \subpage osapi-os-timer.h "Timer Module Reference"
    </UL>
  </UL>
**/

/**
 \page osalIntro OSAL Introduction

 The goal of this library is to promote the creation of portable and
 reusable real time embedded system software. Given the necessary OS
 abstraction layer implementations, the same embedded software should
 compile and run on a number of platforms ranging from spacecraft
 computer systems to desktop PCs.

 The OS Application Program Interfaces (APIs) are broken up into core,
 file system, loader, network, and timer APIs.  See the related document
 sections for full descriptions.

 @note The majority of these APIs should be called from a task running
 in the context of an OSAL application and in general should not be called
 from an ISR. There are a few exceptions, such as the ability to give a
 binary semaphore from an ISR.
**/



