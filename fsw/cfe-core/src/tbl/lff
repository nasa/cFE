    int32                Status = CFE_SUCCESS;
    CFE_FS_Header_t      StdFileHeader;
    CFE_TBL_File_Hdr_t   TblFileHeader;
    int32                FileDescriptor;
    size_t               FilenameLen = strlen(Filename);
    uint32               NumBytes;
    uint8                ExtraByte;

    if (FilenameLen > (OS_MAX_PATH_LEN-1))
    {
        Status = CFE_TBL_ERR_FILENAME_TOO_LONG;
    }
    else
    {
        /* Try to open the specified table file */
        FileDescriptor = OS_open(Filename, OS_READ_ONLY, 0);

        if (FileDescriptor >= 0)
        {
            Status = CFE_TBL_ReadHeaders(FileDescriptor, &StdFileHeader, &TblFileHeader, Filename);

            if (Status == CFE_SUCCESS)
            {
                /* Verify that the specified file has compatible data for specified table */
                if (strcmp(RegRecPtr->Name, TblFileHeader.TableName) == 0)
                {
                    if ((TblFileHeader.Offset + TblFileHeader.NumBytes) > RegRecPtr->Size)
                    {
                        Status = CFE_TBL_ERR_FILE_TOO_LARGE;
                    }
                    else
                    {
                        /* Any Table load that starts beyond the first byte is a "partial load" */
                        /* But a file that starts with the first byte and ends before filling   */
                        /* the whole table is just considered "short".                          */
                        if (TblFileHeader.Offset > 0)
                        {
                            Status = CFE_TBL_WARN_PARTIAL_LOAD;
                        }
                        else if (TblFileHeader.NumBytes < RegRecPtr->Size)
                        {
                            Status = CFE_TBL_WARN_SHORT_FILE;
                        }

                        NumBytes = OS_read(FileDescriptor,
                                           ((uint8*)WorkingBufferPtr->BufferPtr) + TblFileHeader.Offset,
                                           TblFileHeader.NumBytes);

                        if (NumBytes != TblFileHeader.NumBytes)
                        {
                            Status = CFE_TBL_ERR_LOAD_INCOMPLETE;
                        }
                        
                        /* Check to see if the file is too large (ie - more data than header claims) */
                        NumBytes = OS_read(FileDescriptor, &ExtraByte, 1);
                        
                        /* If successfully read another byte, then file must have too much data */
                        if (NumBytes == 1)
                        {
                            Status = CFE_TBL_ERR_FILE_TOO_LARGE;
                        }

                        memset(WorkingBufferPtr->DataSource, 0, OS_MAX_PATH_LEN);
                        strncpy(WorkingBufferPtr->DataSource, Filename, OS_MAX_PATH_LEN);

                        /* Save file creation time for later storage into Registry */
                        WorkingBufferPtr->FileCreateTimeSecs = StdFileHeader.TimeSeconds;
                        WorkingBufferPtr->FileCreateTimeSubSecs = StdFileHeader.TimeSubSeconds;
                        
                        /* Compute the CRC on the specified table buffer */
                        WorkingBufferPtr->Crc = CFE_ES_CalculateCRC(WorkingBufferPtr->BufferPtr,
                                                                    RegRecPtr->Size,
                                                                    0,
                                                                    CFE_MISSION_ES_DEFAULT_CRC);
                    }
                }
                else
                {
                    Status = CFE_TBL_ERR_FILE_FOR_WRONG_TABLE;
                }
            }

            OS_close(FileDescriptor);
        }
        else
        {
            /* Return error code obtained from OS_open */
            Status = FileDescriptor;
        }
    }
